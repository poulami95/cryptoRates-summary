{"version":3,"sources":["assets/images/cryptocurrency.png","components/contents/Header/Header.js","utils/getData.js","components/Cards/index.js","components/contents/CurrencyCards/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","siteLogo","alt","title","getData","a","apiRes","axios","get","then","res","data","catch","error","alert","props","currency","exchange_id","name","data_start","price_usd","data_symbols_count","href","website","style","textDecoration","color","target","rel","CurrencyCards","generateCurrentCards","length","map","item","index","Cards","state","allCurreny","this","setState","Component","App","useEffect","document","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wRAAe,G,kBAAA,IAA0B,4C,OCa1BA,MAVf,WACE,OACE,sBAAKC,UAAU,gBAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKC,IAAKC,EAAUC,IAAI,GAAGC,MAAM,gBAEnC,qBAAKJ,UAAU,aAAf,gC,wECRS,SAAeK,IAA9B,+B,4CAAe,4BAAAC,EAAA,6DACPC,EAAO,GADA,SAELC,IAAMC,IAAI,oFACfC,MAAK,SAACC,GAEHJ,EAAQI,EAAIC,QAEfC,OAAM,SAACC,GACJC,MAAMD,MARC,gCAUJP,GAVI,4C,gCCAA,WAASS,GAEpB,IAAOC,EAAYD,EAAZC,SACP,OACA,sBAAKjB,UAAU,sBAAf,UACI,sBAAMA,UAAU,mBAAhB,SAAoCiB,EAASC,cAC7C,qBAAKlB,UAAU,eAAf,SACG,+BACI,+BAAI,sBAAMA,UAAU,aAAhB,qBAA2C,+BAAOiB,EAASE,UAC/D,6BAAI,uBAAMnB,UAAU,aAAhB,2BAA2C,+BAAOiB,EAASG,kBAC/D,+BAAI,sBAAMpB,UAAU,aAAhB,8BAAoD,+BAAOiB,EAASI,eACxE,+BAAI,sBAAMrB,UAAU,aAAhB,gCAAsD,+BAAOiB,EAASK,wBAC1E,+BAAI,sBAAMtB,UAAU,aAAhB,iCAAuD,+BAAM,mBAAGuB,KAAMN,EAASO,QAASC,MAAO,CAACC,eAAe,OAAOC,MAAM,WAAYC,OAAO,SAASC,IAAI,aAA/F,SAA6GZ,EAASO,wBC4BvLM,G,wDAnCX,WAAYd,GAAO,IAAD,8BACd,cAAMA,IAaVe,qBAAuB,SAACpB,GACpB,GAAGA,EAAIqB,OAAS,EACZ,OACIrB,EAAIsB,KAAI,SAACC,EAAKC,GACV,OACI,8BACI,cAACC,EAAD,CAAOnB,SAAUiB,KADXC,OAjB1B,EAAKE,MAAO,CACRC,WAAW,IAHD,E,4FAMlB,4BAAAhC,EAAA,sEACuBD,IADvB,OACQE,EADR,OAEIgC,KAAKC,SAAS,CACZF,WAAa/B,IAHnB,gD,0EAqBA,WACI,OACI,qBAAKP,UAAU,mBAAf,SACKuC,KAAKR,qBAAqBQ,KAAKF,MAAMC,kB,GA/B1BG,cCYbC,MAZf,WAIE,OAHAC,qBAAU,WACRC,SAASxC,MAAQ,sBAChB,IAED,sBAAKJ,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCAS6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFX,SAASY,eAAe,SAM1BX,M","file":"static/js/main.2fffddd4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.4b4aa565.png\";","import \"./Header.css\";\r\nimport siteLogo from \"../../../assets/images/cryptocurrency.png\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"headerWrapper\">\r\n      <div className=\"headerLogo\">\r\n        <img src={siteLogo} alt=\"\" title=\"Site Logo\" />\r\n      </div>\r\n      <div className=\"headerText\">EXCHANGE RATES</div>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;\r\n","import axios from 'axios';\r\nexport default async function getData(){\r\n    let apiRes=[];\r\n    await axios.get('https://rest.coinapi.io/v1/exchanges?apikey=FC9A6B3B-452F-441E-8A69-2922AAEB4D24')\r\n    .then((res)=>{\r\n        //console.log(res.data)\r\n        apiRes= res.data;\r\n    })\r\n    .catch((error)=>{\r\n        alert(error);\r\n    })\r\n    return apiRes\r\n}\r\n","import \"./cards.css\";\r\nexport default function(props){\r\n\r\n    const {currency} = props\r\n    return(\r\n    <div className=\"cards-outer-wrapper\">\r\n        <span className=\"card-header-text\">{currency.exchange_id}</span> \r\n        <div className=\"card-content\">\r\n           <ul>\r\n               <li><span className=\"title-name\">NAME : </span><span>{currency.name}</span></li>\r\n               <li><span className=\"title-name\">LAUNCH DATE : <span>{currency.data_start}</span></span></li>\r\n               <li><span className=\"title-name\">PRICE(IN USD) : </span><span>{currency.price_usd}</span></li>\r\n               <li><span className=\"title-name\">COUNT OF TRADES : </span><span>{currency.data_symbols_count}</span></li>\r\n               <li><span className=\"title-name\">OFFICIAL WEBSITE : </span><span><a href={currency.website} style={{textDecoration:\"none\",color:\"#2f4f4f\"}} target=\"_blank\" rel=\"noreferrer\">{currency.website}</a></span></li>\r\n            </ul> \r\n        </div>   \r\n    </div>\r\n    )\r\n    \r\n}","import { Component } from \"react\";\r\nimport getData from \"../../../utils/getData\";\r\nimport Cards from \"../../Cards\";\r\nimport './CurrencyCards.css';\r\n\r\nclass CurrencyCards extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            allCurreny:[]\r\n        }\r\n    }\r\n    async componentDidMount(){\r\n        let apiRes = await getData();\r\n        this.setState({\r\n          allCurreny : apiRes  \r\n        }/* ,()=>{\r\n            console.log(this.state.allCurreny)\r\n        } */)\r\n    }\r\n    generateCurrentCards = (res) =>{\r\n        if(res.length > 0){\r\n            return(\r\n                res.map((item,index)=>{\r\n                    return(\r\n                        <div key={index}>\r\n                            <Cards currency={item}/>\r\n                        </div>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"contents-wrapper\">\r\n                {this.generateCurrentCards(this.state.allCurreny)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CurrencyCards;","import \"./App.css\";\r\nimport Header from \"./components/contents/Header/Header\";\r\nimport { useEffect } from \"react\";\r\nimport CurrencyCards from \"./components/contents/CurrencyCards\";\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    document.title = \"CC Exchange rates\";\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <CurrencyCards/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}